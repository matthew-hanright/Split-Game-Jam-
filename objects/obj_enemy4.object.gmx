<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyMother</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
damage = 2;
moveDistance = 50;
ticks = 0;
order[0] = "right";
order[1] = "down";
order[2] = "left";
order[3] = "up";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ticks &lt; moveDistance){
    if(order[0] == "right"){
        k_right = true;
        k_left = false;
        k_up = false;
        k_down = false;
    }
    else if(order[0] == "left"){
        k_right = false;
        k_left = true;
        k_up = false;
        k_down = false;
    }
    else if(order[0] == "up"){
        k_right = false;
        k_left = false;
        k_up = true;
        k_down = false;
    }
    else if(order[0] == "down"){
        k_right = false;
        k_left = false;
        k_up = false;
        k_down = true;
    }
}
else if(ticks &lt; moveDistance * 2){
    if(order[1] == "right"){
        k_right = true;
        k_left = false;
        k_up = false;
        k_down = false;
    }
    else if(order[1] == "left"){
        k_right = false;
        k_left = true;
        k_up = false;
        k_down = false;
    }
    else if(order[1] == "up"){
        k_right = false;
        k_left = false;
        k_up = true;
        k_down = false;
    }
    else if(order[1] == "down"){
        k_right = false;
        k_left = false;
        k_up = false;
        k_down = true;
    }
}
else if(ticks &lt; moveDistance * 3){
    if(order[2] == "right"){
        k_right = true;
        k_left = false;
        k_up = false;
        k_down = false;
    }
    else if(order[2] == "left"){
        k_right = false;
        k_left = true;
        k_up = false;
        k_down = false;
    }
    else if(order[2] == "up"){
        k_right = false;
        k_left = false;
        k_up = true;
        k_down = false;
    }
    else if(order[2] == "down"){
        k_right = false;
        k_left = false;
        k_up = false;
        k_down = true;
    }
}
else if(ticks &lt; moveDistance * 4){
    if(order[3] == "right"){
        k_right = true;
        k_left = false;
        k_up = false;
        k_down = false;
    }
    else if(order[3] == "left"){
        k_right = false;
        k_left = true;
        k_up = false;
        k_down = false;
    }
    else if(order[3] == "up"){
        k_right = false;
        k_left = false;
        k_up = true;
        k_down = false;
    }
    else if(order[3] == "down"){
        k_right = false;
        k_left = false;
        k_up = false;
        k_down = true;
    }
}
else if(ticks &gt;= moveDistance * 4){
    ticks = 0;
}
ticks++;
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
